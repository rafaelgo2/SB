In file included from main.cpp:2:0:
Module.hpp:33:42: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
           3, 4, 1, 1, 0, 4, 4, 1, 3, 3, 1};
                                          ^
Module.hpp:33:42: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
In file included from Module.cpp:1:0:
Module.hpp:33:42: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
           3, 4, 1, 1, 0, 4, 4, 1, 3, 3, 1};
                                          ^
Module.hpp:33:42: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
Module.cpp: In member function ‘void Module::finish()’:
Module.cpp:129:38: error: expected ‘;’ before ‘)’ token
      newInstruction(getReg(op2) << 5));
                                      ^
Module.cpp:141:45: error: no matching function for call to ‘Module::newInstruction(int&, std::map<std::__cxx11::basic_string<char>, int>::mapped_type)’
      newInstruction(pc, (opCodeMap[op] << 3));
                                             ^
Module.cpp:47:6: note: candidate: void Module::newInstruction(char)
 void Module::newInstruction(char n){
      ^
Module.cpp:47:6: note:   candidate expects 1 argument, 2 provided
Module.cpp:51:6: note: candidate: void Module::newInstruction(char, std::__cxx11::string)
 void Module::newInstruction(char n, string s){
      ^
Module.cpp:51:6: note:   no known conversion for argument 2 from ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’
Module.cpp:142:23: error: cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ for argument ‘1’ to ‘bool isANumber(char)’
      if (isANumber(op1)){
                       ^
