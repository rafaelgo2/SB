Microchip MPLAB XC8 Compiler V1.40 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.40\dat\en_msgs.txt -cs \
  -h+dist/default/production\TP3.X.production.sym \
  --cmf=dist/default/production\TP3.X.production.cmf -z -Q16F777 \
  -oC:\Users\Perfil\AppData\Local\Temp\s5r4.2 \
  -Mdist/default/production/TP3.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -DCODE=2 -DSTRCODE=2 \
  -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\Perfil\AppData\Local\Temp\s5r4.obj \
  dist/default/production\TP3.X.production.obj 

Object code version is 3.11

Machine type is 16F777



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Perfil\AppData\Local\Temp\s5r4.obj
                end_init                              0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\TP3.X.production.obj
                cinit                               7DB      7DB       25      FB6       0
                text39                              F10      F10       2C     1E20       0
                text38                              E55      E55       22     1CAA       0
                text37                              E77      E77       23     1CEE       0
                text36                              D84      D84        6     1B08       0
                text35                              E9A      E9A       24     1D34       0
                text34                              244      244       51      488       0
                text33                              DC8      DC8        E     1B90       0
                text32                              EE6      EE6       2A     1DCC       0
                text31                              1AA      1AA       4B      354       0
                text30                              E34      E34       21     1C68       0
                text29                               65       65       3C       CA       0
                text28                              338      338       59      670       0
                text27                              DF6      DF6       11     1BEC       0
                text26                              D77      D77        4     1AEE       0
                text25                              DAF      DAF        C     1B5E       0
                text24                              EBE      EBE       28     1D7C       0
                text23                              F9B      F9B       31     1F36       0
                text22                              F6B      F6B       30     1ED6       0
                text21                               A1       A1       3F      142       0
                text20                              163      163       47      2C6       0
                text19                              2E6      2E6       52      5CC       0
                text18                              FCC      FCC       34     1F98       0
                text17                              295      295       51      52A       0
                text16                              F3C      F3C       2F     1E78       0
                text15                              4AD      4AD       CB      95A       0
                text14                              DA4      DA4        B     1B48       0
                text13                              391      391       8B      722       0
                text12                              DBB      DBB        D     1B76       0
                text11                              D7F      D7F        5     1AFE       0
                text10                              D92      D92        9     1B24       0
                text9                               1F5      1F5       4F      3EA       0
                text8                               DD6      DD6       10     1BAC       0
                text7                               DE6      DE6       10     1BCC       0
                text6                                E0       E0       3F      1C0       0
                text5                               578      578       FF      AF0       0
                text4                               11F      11F       44      23E       0
                text3                               D9B      D9B        9     1B36       0
                text2                               E18      E18       1C     1C30       0
                text1                               41C      41C       91      838       0
                maintext                            677      677      164      CEE       0
                cstackBANK0                          20       20       35       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          A0       A0       22       A0       1
                cstackBANK3                         190      190       4A      190       1
                clrtext                             D8A      D8A        8     1B14       0
                inittext                            E07      E07       11     1C0E       0
                dataBANK1                            C2       C2       10       A0       1
                dataBANK0                            69       69        4       20       1
                bssBANK0                             55       55       14       20       1
                strings                               3        3       52        6       0
                idataBANK1                           55       55       10       AA       0
                idataBANK0                          D7B      D7B        4     1AF6       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7DB      7DB       25         0
                text39                              F10      F10       2C         0
                text38                              E55      E55       22         0
                text37                              E77      E77       23         0
                text36                              D84      D84        6         0
                text35                              E9A      E9A       24         0
                text34                              244      244       51         0
                text33                              DC8      DC8        E         0
                text32                              EE6      EE6       2A         0
                text31                              1AA      1AA       4B         0
                text30                              E34      E34       21         0
                text29                               65       65       3C         0
                text28                              338      338       59         0
                text27                              DF6      DF6       11         0
                text26                              D77      D77        4         0
                text25                              DAF      DAF        C         0
                text24                              EBE      EBE       28         0
                text23                              F9B      F9B       31         0
                text22                              F6B      F6B       30         0
                text21                               A1       A1       3F         0
                text20                              163      163       47         0
                text19                              2E6      2E6       52         0
                text18                              FCC      FCC       34         0
                text17                              295      295       51         0
                text16                              F3C      F3C       2F         0
                text15                              4AD      4AD       CB         0
                text14                              DA4      DA4        B         0
                text13                              391      391       8B         0
                text12                              DBB      DBB        D         0
                text11                              D7F      D7F        5         0
                text10                              D92      D92        9         0
                text9                               1F5      1F5       4F         0
                text8                               DD6      DD6       10         0
                text7                               DE6      DE6       10         0
                text6                                E0       E0       3F         0
                text5                               578      578       FF         0
                text4                               11F      11F       44         0
                text3                               D9B      D9B        9         0
                text2                               E18      E18       1C         0
                text1                               41C      41C       91         0
                maintext                            677      677      164         0
                clrtext                             D8A      D8A        8         0
                inittext                            E07      E07       11         0
                idataBANK1                           55       55       10         0
                idataBANK0                          D7B      D7B        4         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                               3        3       52         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       35         1
                dataBANK0                            69       69        4         1
                bssBANK0                             55       55       14         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       22         1
                dataBANK1                            C2       C2       10         1

        CLASS   BANK2          

        CLASS   BANK3          
                cstackBANK3                         190      190       4A         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                strings                        000003  000052  000055         6       0  STRING      2
                cstackBANK0                    000020  00004D  00006D        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                cstackBANK1                    0000A0  000032  0000D2        A0       1  BANK1       1
                idataBANK1                     000055  000010  000065        AA       0  CODE        2
                text29                         000065  00003C  0000A1        CA       0  CODE        2
                text21                         0000A1  00003F  0000E0       142       0  CODE        2
                cstackBANK3                    000190  00004A  0001DA       190       1  BANK3       1
                text6                          0000E0  00003F  00011F       1C0       0  CODE        2
                text4                          00011F  000044  000163       23E       0  CODE        2
                text20                         000163  000047  0001AA       2C6       0  CODE        2
                text31                         0001AA  00004B  0001F5       354       0  CODE        2
                text9                          0001F5  00004F  000244       3EA       0  CODE        2
                text34                         000244  000051  000295       488       0  CODE        2
                text17                         000295  000051  0002E6       52A       0  CODE        2
                text19                         0002E6  000052  000338       5CC       0  CODE        2
                text28                         000338  000059  000391       670       0  CODE        2
                text13                         000391  00008B  00041C       722       0  CODE        2
                text1                          00041C  000091  0004AD       838       0  CODE        2
                text15                         0004AD  0000CB  000578       95A       0  CODE        2
                text5                          000578  0000FF  000677       AF0       0  CODE        2
                maintext                       000677  000164  0007DB       CEE       0  CODE        2
                cinit                          0007DB  000025  000800       FB6       0  CODE        2
                text26                         000D77  000004  000D7B      1AEE       0  CODE        2
                idataBANK0                     000D7B  000004  000D7F      1AF6       0  CODE        2
                text11                         000D7F  000005  000D84      1AFE       0  CODE        2
                text36                         000D84  000006  000D8A      1B08       0  CODE        2
                clrtext                        000D8A  000008  000D92      1B14       0  CODE        2
                text10                         000D92  000009  000D9B      1B24       0  CODE        2
                text3                          000D9B  000009  000DA4      1B36       0  CODE        2
                text14                         000DA4  00000B  000DAF      1B48       0  CODE        2
                text25                         000DAF  00000C  000DBB      1B5E       0  CODE        2
                text12                         000DBB  00000D  000DC8      1B76       0  CODE        2
                text33                         000DC8  00000E  000DD6      1B90       0  CODE        2
                text8                          000DD6  000010  000DE6      1BAC       0  CODE        2
                text7                          000DE6  000010  000DF6      1BCC       0  CODE        2
                text27                         000DF6  000011  000E07      1BEC       0  CODE        2
                inittext                       000E07  000011  000E18      1C0E       0  CODE        2
                text2                          000E18  00001C  000E34      1C30       0  CODE        2
                text30                         000E34  000021  000E55      1C68       0  CODE        2
                text38                         000E55  000022  000E77      1CAA       0  CODE        2
                text37                         000E77  000023  000E9A      1CEE       0  CODE        2
                text35                         000E9A  000024  000EBE      1D34       0  CODE        2
                text24                         000EBE  000028  000EE6      1D7C       0  CODE        2
                text32                         000EE6  00002A  000F10      1DCC       0  CODE        2
                text39                         000F10  00002C  000F3C      1E20       0  CODE        2
                text16                         000F3C  00002F  000F6B      1E78       0  CODE        2
                text22                         000F6B  000030  000F9B      1ED6       0  CODE        2
                text23                         000F9B  000031  000FCC      1F36       0  CODE        2
                text18                         000FCC  000034  001000      1F98       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006D-006F              3           1
        BANK1            00D2-00EF             1E           1
        BANK2            0110-016F             60           1
        BANK3            01DA-01EF             16           1
        CODE             0800-0D76            577           2
                         1000-1FFF            800
        CONST            0800-0D76            100           2
                         1000-1FFF            100
        ENTRY            0800-0D76            100           2
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              006D-006F              3           1
                         00D2-00EF             1E
                         0110-016F             60
                         01DA-01EF             16
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0800-0D76            577           2
                         1000-1FFF           1000
        STRING           0800-0D76            100           2
                         1000-1FFF            100

                                  Symbol Table

?___awdiv                cstackCOMMON 0070
?___awmod                cstackCOMMON 0070
?___lmul                 cstackCOMMON 0070
?_end                    cstackCOMMON 007B
?_getRandon              cstackCOMMON 0077
?_isFood                 cstackCOMMON 007C
?_isSet                  cstackCOMMON 007C
?_points                 cstackCOMMON 0070
?_rand                   cstackBANK0  0020
?_won                    cstackCOMMON 0070
_ADCON1                  (abs)        009F
_PORTBbits               (abs)        0006
_PORTCbits               (abs)        0007
_PORTD                   (abs)        0008
_PORTEbits               (abs)        0009
_TRISA                   (abs)        0085
_TRISB                   (abs)        0086
_TRISC                   (abs)        0087
_TRISCbits               (abs)        0087
_TRISD                   (abs)        0088
_TRISE                   (abs)        0089
__CFG_BOREN$OFF          (abs)        0000
__CFG_BORSEN$OFF         (abs)        0000
__CFG_BORV$20            (abs)        0000
__CFG_CCP2MX$RC1         (abs)        0000
__CFG_CP$OFF             (abs)        0000
__CFG_FCMEN$OFF          (abs)        0000
__CFG_FOSC$HS            (abs)        0000
__CFG_IESO$OFF           (abs)        0000
__CFG_MCLRE$ON           (abs)        0000
__CFG_PWRTE$OFF          (abs)        0000
__CFG_WDTE$OFF           (abs)        0000
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__HbssBANK0              bssBANK0     0000
__Hcinit                 cinit        0800
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       2009
__HcstackBANK0           cstackBANK0  0000
__HcstackBANK1           cstackBANK1  0000
__HcstackBANK3           cstackBANK3  0000
__HcstackCOMMON          cstackCOMMON 0000
__HdataBANK0             dataBANK0    0000
__HdataBANK1             dataBANK1    0000
__Heeprom_data           eeprom_data  0000
__Hend_init              end_init     0003
__Hfunctab               functab      0000
__HidataBANK0            idataBANK0   0000
__HidataBANK1            idataBANK1   0000
__Hidloc                 idloc        0000
__Hinit                  init         0000
__Hinittext              inittext     0000
__Hintentry              intentry     0000
__Hmaintext              maintext     0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0000
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hsfr2                  sfr2         0000
__Hsfr3                  sfr3         0000
__Hspace_0               (abs)        2009
__Hspace_1               (abs)        01DA
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0000
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__LbssBANK0              bssBANK0     0000
__Lcinit                 cinit        07DB
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       2007
__LcstackBANK0           cstackBANK0  0000
__LcstackBANK1           cstackBANK1  0000
__LcstackBANK3           cstackBANK3  0000
__LcstackCOMMON          cstackCOMMON 0000
__LdataBANK0             dataBANK0    0000
__LdataBANK1             dataBANK1    0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     0000
__Lfunctab               functab      0000
__LidataBANK0            idataBANK0   0000
__LidataBANK1            idataBANK1   0000
__Lidloc                 idloc        0000
__Linit                  init         0000
__Linittext              inittext     0000
__Lintentry              intentry     0000
__Lmaintext              maintext     0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lsfr2                  sfr2         0000
__Lsfr3                  sfr3         0000
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        2009
__S1                     (abs)        01DA
__S2                     (abs)        0000
___awdiv                 text28       0338
___awdiv@counter         cstackCOMMON 0075
___awdiv@dividend        cstackCOMMON 0072
___awdiv@divisor         cstackCOMMON 0070
___awdiv@quotient        cstackCOMMON 0077
___awdiv@sign            cstackCOMMON 0076
___awmod                 text31       01AA
___awmod@counter         cstackCOMMON 0075
___awmod@dividend        cstackCOMMON 0072
___awmod@divisor         cstackCOMMON 0070
___awmod@sign            cstackCOMMON 0076
___int_sp                stack        0000
___latbits               (abs)        0002
___lmul                  text21       00A1
___lmul@multiplicand     cstackCOMMON 0074
___lmul@multiplier       cstackCOMMON 0070
___lmul@product          cstackCOMMON 0079
___sp                    stack        0000
__end_of___awdiv         text28       0391
__end_of___awmod         text31       01F5
__end_of___lmul          text21       00E0
__end_of__initialization cinit        07FC
__end_of__stringtab      strings      0013
__end_of_atraso_ms       text37       0E9A
__end_of_back            text30       0E55
__end_of_delay           text10       0D9B
__end_of_end             text38       0E77
__end_of_front           text29       00A1
__end_of_getI            text27       0E07
__end_of_getJ            text26       0D7B
__end_of_getRandon       text4        0163
__end_of_getd            text12       0DC8
__end_of_getu            text11       0D84
__end_of_i2c_rb          text9        0244
__end_of_i2c_start       text8        0DE6
__end_of_i2c_stop        text7        0DF6
__end_of_i2c_wb          text6        011F
__end_of_increment       text24       0EE6
__end_of_isFood          text23       0FCC
__end_of_isSet           text22       0F9B
__end_of_lcd_cmd         text35       0EBE
__end_of_lcd_dat         text33       0DD6
__end_of_lcd_init        text34       0295
__end_of_lcd_str         text32       0F10
__end_of_lcd_wr          text36       0D8A
__end_of_main            maintext     07DB
__end_of_makeFood        text19       0338
__end_of_move            text15       0578
__end_of_newPair         text25       0DBB
__end_of_points          text14       0DAF
__end_of_pop             text18       1000
__end_of_print           text13       041C
__end_of_push            text17       02E6
__end_of_rand            text20       01AA
__end_of_rtc_r           text5        0677
__end_of_set             text16       0F6B
__end_of_srand           text3        0DA4
__end_of_startQueue      text2        0E34
__end_of_startSnake      text1        04AD
__end_of_won             text39       0F3C
__initialization         cinit        07DB
__pbssBANK0              bssBANK0     0055
__pcstackBANK0           cstackBANK0  0020
__pcstackBANK1           cstackBANK1  00A0
__pcstackBANK3           cstackBANK3  0190
__pcstackCOMMON          cstackCOMMON 0070
__pdataBANK0             dataBANK0    0069
__pdataBANK1             dataBANK1    00C2
__pidataBANK0            idataBANK0   0D7B
__pidataBANK1            idataBANK1   0055
__pmaintext              maintext     0677
__pstrings               strings      0003
__ptext1                 text1        041C
__ptext10                text10       0D92
__ptext11                text11       0D7F
__ptext12                text12       0DBB
__ptext13                text13       0391
__ptext14                text14       0DA4
__ptext15                text15       04AD
__ptext16                text16       0F3C
__ptext17                text17       0295
__ptext18                text18       0FCC
__ptext19                text19       02E6
__ptext2                 text2        0E18
__ptext20                text20       0163
__ptext21                text21       00A1
__ptext22                text22       0F6B
__ptext23                text23       0F9B
__ptext24                text24       0EBE
__ptext25                text25       0DAF
__ptext26                text26       0D77
__ptext27                text27       0DF6
__ptext28                text28       0338
__ptext29                text29       0065
__ptext3                 text3        0D9B
__ptext30                text30       0E34
__ptext31                text31       01AA
__ptext32                text32       0EE6
__ptext33                text33       0DC8
__ptext34                text34       0244
__ptext35                text35       0E9A
__ptext36                text36       0D84
__ptext37                text37       0E77
__ptext38                text38       0E55
__ptext39                text39       0F10
__ptext4                 text4        011F
__ptext5                 text5        0578
__ptext6                 text6        00E0
__ptext7                 text7        0DE6
__ptext8                 text8        0DD6
__ptext9                 text9        01F5
__size_of___awdiv        (abs)        0000
__size_of___awmod        (abs)        0000
__size_of___lmul         (abs)        0000
__size_of_atraso_ms      (abs)        0000
__size_of_back           (abs)        0000
__size_of_delay          (abs)        0000
__size_of_end            (abs)        0000
__size_of_front          (abs)        0000
__size_of_getI           (abs)        0000
__size_of_getJ           (abs)        0000
__size_of_getRandon      (abs)        0000
__size_of_getd           (abs)        0000
__size_of_getu           (abs)        0000
__size_of_i2c_rb         (abs)        0000
__size_of_i2c_start      (abs)        0000
__size_of_i2c_stop       (abs)        0000
__size_of_i2c_wb         (abs)        0000
__size_of_increment      (abs)        0000
__size_of_isFood         (abs)        0000
__size_of_isSet          (abs)        0000
__size_of_lcd_cmd        (abs)        0000
__size_of_lcd_dat        (abs)        0000
__size_of_lcd_init       (abs)        0000
__size_of_lcd_str        (abs)        0000
__size_of_lcd_wr         (abs)        0000
__size_of_main           (abs)        0000
__size_of_makeFood       (abs)        0000
__size_of_move           (abs)        0000
__size_of_newPair        (abs)        0000
__size_of_points         (abs)        0000
__size_of_pop            (abs)        0000
__size_of_print          (abs)        0000
__size_of_push           (abs)        0000
__size_of_rand           (abs)        0000
__size_of_rtc_r          (abs)        0000
__size_of_set            (abs)        0000
__size_of_srand          (abs)        0000
__size_of_startQueue     (abs)        0000
__size_of_startSnake     (abs)        0000
__size_of_won            (abs)        0000
__stringbase             strings      0012
__stringtab              strings      0003
_atraso_ms               text37       0E77
_back                    text30       0E34
_date                    bssBANK0     0055
_delay                   text10       0D92
_end                     text38       0E55
_end$329                 cstackBANK0  0022
_front                   text29       0065
_getI                    text27       0DF6
_getJ                    text26       0D77
_getRandon               text4        011F
_getd                    text12       0DBB
_getu                    text11       0D7F
_i2c_rb                  text9        01F5
_i2c_start               text8        0DD6
_i2c_stop                text7        0DE6
_i2c_wb                  text6        00E0
_increment               text24       0EBE
_isFood                  text23       0F9B
_isSet                   text22       0F6B
_lcd_cmd                 text35       0E9A
_lcd_dat                 text33       0DC8
_lcd_init                text34       0244
_lcd_str                 text32       0EE6
_lcd_wr                  text36       0D84
_main                    maintext     0677
_makeFood                text19       02E6
_move                    text15       04AD
_newPair                 text25       0DAF
_points                  text14       0DA4
_pop                     text18       0FCC
_print                   text13       0391
_push                    text17       0295
_rand                    text20       0163
_randx                   dataBANK0    0069
_rtc_r                   text5        0578
_set                     text16       0F3C
_srand                   text3        0D9B
_startQueue              text2        0E18
_startSnake              text1        041C
_time                    bssBANK0     005F
_won                     text39       0F10
atraso_ms@i              cstackCOMMON 0073
atraso_ms@j              cstackCOMMON 0075
atraso_ms@valor          cstackCOMMON 0070
back@pos                 cstackCOMMON 0078
back@q                   cstackCOMMON 007A
btemp                    (abs)        007E
clear_ram0               clrtext      0D8A
end@s                    cstackBANK0  0023
end_of_initialization    cinit        07FC
front@pos                cstackBANK0  0020
front@q                  cstackBANK0  0022
getI@p                   cstackCOMMON 007B
getJ@p                   cstackCOMMON 0070
getRandon@i              cstackBANK0  0022
getRandon@x              cstackBANK0  0020
getd@nn                  cstackCOMMON 0071
getu@nn                  cstackCOMMON 0070
i2c_rb@ack               cstackCOMMON 0072
i2c_rb@i                 cstackCOMMON 0074
i2c_rb@ret               cstackCOMMON 0073
i2c_wb@i                 cstackCOMMON 0073
i2c_wb@val               cstackCOMMON 0072
increment@i              cstackCOMMON 007C
increment@j              cstackCOMMON 007D
increment@p              cstackBANK0  0023
increment@sumI           cstackBANK0  0021
increment@sumJ           cstackBANK0  0022
init_fetch0              inittext     0E07
init_ram0                inittext     0E0B
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
isFood@p                 cstackCOMMON 007C
isFood@s                 cstackBANK0  0025
isSet@p                  cstackCOMMON 007C
isSet@s                  cstackBANK0  0025
lcd_cmd@val              cstackCOMMON 0076
lcd_dat@val              cstackCOMMON 0071
lcd_str@i                cstackCOMMON 0075
lcd_str@str              cstackCOMMON 0072
lcd_wr@val               cstackCOMMON 0070
main@F1498               dataBANK1    00C2
main@direction           cstackBANK0  0053
main@field               cstackBANK1  00A0
main@message             cstackBANK0  0041
main@pts                 cstackBANK0  0051
main@s                   cstackBANK3  0190
makeFood@i               cstackBANK0  002B
makeFood@j               cstackBANK0  002D
makeFood@s               cstackBANK0  002F
move@direction           cstackBANK0  0030
move@head                cstackBANK0  0034
move@lastPosition        cstackBANK0  0035
move@newPosition         cstackBANK0  0036
move@s                   cstackBANK0  0037
newPair@i                cstackCOMMON 0072
newPair@j                cstackCOMMON 0070
points@s                 cstackCOMMON 0073
pop@q                    cstackCOMMON 0079
print@field              cstackCOMMON 007D
print@head               cstackBANK0  0026
print@i                  cstackBANK0  002A
print@j                  cstackBANK0  0028
print@s                  cstackBANK0  0027
push@pos                 cstackCOMMON 007A
push@q                   cstackCOMMON 007C
push@x                   cstackCOMMON 0077
reset_vec                reset_vec    0000
rtc_r@tmp                cstackCOMMON 0076
set@p                    cstackCOMMON 007D
set@s                    cstackBANK0  0023
srand@x                  cstackCOMMON 007C
stackhi                  (abs)        0000
stacklo                  (abs)        0000
start                    init         0000
startQueue@q             cstackCOMMON 0070
startSnake@i             cstackBANK0  0033
startSnake@j             cstackBANK0  0035
startSnake@s             cstackBANK0  0037
start_initialization     cinit        07DB
won@s                    cstackCOMMON 007A
wtemp0                   (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 21 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  pts             2   49[BANK0 ] int 
  s              74    0[BANK3 ] struct .
  field          34    0[BANK1 ] unsigned char [17][2]
  message        16   33[BANK0 ] unsigned char [16]
  direction       2   51[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      20      34      74       0
      Temps:          0       9       0       0       0
      Totals:         0      29      34      74       0
Total ram usage:      137 bytes
 Hardware stack levels required when called:    5
 This function calls:
		___awdiv
		___awmod
		_end
		_lcd_cmd
		_lcd_init
		_lcd_str
		_move
		_points
		_print
		_startSnake
		_won
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _startSnake *****************
 Defined at:
		line 16 in file "snake.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR struct .
		 -> main@s(74), 
 Auto vars:     Size  Location     Type
  s               1   23[BANK0 ] PTR struct .
		 -> main@s(74), 
  j               2   21[BANK0 ] int 
  i               2   19[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       5       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_getRandon
		_makeFood
		_newPair
		_set
		_srand
		_startQueue
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _startQueue *****************
 Defined at:
		line 3 in file "queue.c"
 Parameters:    Size  Location     Type
  q               1    wreg     PTR struct .
		 -> main@s(74), 
 Auto vars:     Size  Location     Type
  q               1    0[COMMON] PTR struct .
		 -> main@s(74), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_startSnake
 This function uses a non-reentrant model


 *************** function _srand *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\rand.c"
 Parameters:    Size  Location     Type
  x               2   12[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_startSnake
 This function uses a non-reentrant model


 *************** function _getRandon *****************
 Defined at:
		line 32 in file "rtc_r.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    2[BANK0 ] int 
  x               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    7[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       4       0       0       0
      Temps:          3       0       0       0       0
      Totals:         5       4       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_rtc_r
 This function is called by:
		_startSnake
 This function uses a non-reentrant model


 *************** function _rtc_r *****************
 Defined at:
		line 51 in file "rtc_r.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tmp             1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_getd
		_getu
		_i2c_rb
		_i2c_start
		_i2c_stop
		_i2c_wb
 This function is called by:
		_getRandon
 This function uses a non-reentrant model


 *************** function _i2c_wb *****************
 Defined at:
		line 69 in file "i2c.c"
 Parameters:    Size  Location     Type
  val             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  val             1    2[COMMON] unsigned char 
  i               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_delay
 This function is called by:
		_rtc_r
 This function uses a non-reentrant model


 *************** function _i2c_stop *****************
 Defined at:
		line 60 in file "i2c.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_delay
 This function is called by:
		_rtc_r
 This function uses a non-reentrant model


 *************** function _i2c_start *****************
 Defined at:
		line 51 in file "i2c.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_delay
 This function is called by:
		_rtc_r
 This function uses a non-reentrant model


 *************** function _i2c_rb *****************
 Defined at:
		line 87 in file "i2c.c"
 Parameters:    Size  Location     Type
  ack             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ack             1    2[COMMON] unsigned char 
  i               1    4[COMMON] unsigned char 
  ret             1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_delay
 This function is called by:
		_rtc_r
 This function uses a non-reentrant model


 *************** function _delay *****************
 Defined at:
		line 30 in file "i2c.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_i2c_start
		_i2c_stop
		_i2c_wb
		_i2c_rb
 This function uses a non-reentrant model


 *************** function _getu *****************
 Defined at:
		line 45 in file "rtc_r.c"
 Parameters:    Size  Location     Type
  nn              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  nn              1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_rtc_r
 This function uses a non-reentrant model


 *************** function _getd *****************
 Defined at:
		line 40 in file "rtc_r.c"
 Parameters:    Size  Location     Type
  nn              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  nn              1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_rtc_r
 This function uses a non-reentrant model


 *************** function _print *****************
 Defined at:
		line 36 in file "snake.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR struct .
		 -> main@s(74), 
  field           1   13[COMMON] PTR unsigned char [17]
		 -> main@field(34), 
 Auto vars:     Size  Location     Type
  s               1    7[BANK0 ] PTR struct .
		 -> main@s(74), 
  i               2   10[BANK0 ] int 
  j               2    8[BANK0 ] int 
  head            1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       3       0       0       0
      Totals:         1       9       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_front
		_newPair
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _points *****************
 Defined at:
		line 104 in file "snake.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR struct .
		 -> main@s(74), 
 Auto vars:     Size  Location     Type
  s               1    3[COMMON] PTR struct .
		 -> main@s(74), 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _move *****************
 Defined at:
		line 60 in file "snake.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR struct .
		 -> main@s(74), 
  direction       1   16[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  s               1   23[BANK0 ] PTR struct .
		 -> main@s(74), 
  newPosition     1   22[BANK0 ] unsigned char 
  lastPosition    1   21[BANK0 ] unsigned char 
  head            1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_back
		_front
		_getI
		_getJ
		_increment
		_isFood
		_isSet
		_makeFood
		_pop
		_set
		_won
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _set *****************
 Defined at:
		line 3 in file "snake.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR struct .
		 -> main@s(74), 
  p               1   13[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  s               1    3[BANK0 ] PTR struct .
		 -> main@s(74), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       3       0       0       0
      Totals:         1       4       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_getI
		_getJ
		_push
 This function is called by:
		_startSnake
		_move
 This function uses a non-reentrant model


 *************** function _push *****************
 Defined at:
		line 8 in file "queue.c"
 Parameters:    Size  Location     Type
  q               1    wreg     PTR struct .
		 -> main@s(74), 
  x               1    7[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  q               1   12[COMMON] PTR struct .
		 -> main@s(74), 
  pos             2   10[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___awmod
 This function is called by:
		_set
 This function uses a non-reentrant model


 *************** function _pop *****************
 Defined at:
		line 25 in file "queue.c"
 Parameters:    Size  Location     Type
  q               1    wreg     PTR struct .
		 -> main@s(74), 
 Auto vars:     Size  Location     Type
  q               1    9[COMMON] PTR struct .
		 -> main@s(74), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___awmod
 This function is called by:
		_move
 This function uses a non-reentrant model


 *************** function _makeFood *****************
 Defined at:
		line 95 in file "snake.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR struct .
		 -> main@s(74), 
 Auto vars:     Size  Location     Type
  s               1   15[BANK0 ] PTR struct .
		 -> main@s(74), 
  j               2   13[BANK0 ] int 
  i               2   11[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       5       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_isSet
		_newPair
		_rand
 This function is called by:
		_startSnake
		_move
 This function uses a non-reentrant model


 *************** function _rand *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\rand.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___lmul
 This function is called by:
		_makeFood
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[COMMON] unsigned long 
  multiplicand    4    4[COMMON] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    9[COMMON] unsigned long 
 Return value:  Size  Location     Type
                  4    0[COMMON] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         8       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:        13       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_rand
 This function uses a non-reentrant model


 *************** function _isSet *****************
 Defined at:
		line 8 in file "snake.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR struct .
		 -> main@s(74), 
  p               1   12[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  s               1    5[BANK0 ] PTR struct .
		 -> main@s(74), 
 Return value:  Size  Location     Type
                  2   12[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       5       0       0       0
      Totals:         2       6       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_getI
		_getJ
 This function is called by:
		_move
		_makeFood
 This function uses a non-reentrant model


 *************** function _isFood *****************
 Defined at:
		line 12 in file "snake.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR struct .
		 -> main@s(74), 
  p               1   12[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  s               1    5[BANK0 ] PTR struct .
		 -> main@s(74), 
 Return value:  Size  Location     Type
                  2   12[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       5       0       0       0
      Totals:         2       6       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_getI
		_getJ
 This function is called by:
		_move
 This function uses a non-reentrant model


 *************** function _increment *****************
 Defined at:
		line 15 in file "pair.c"
 Parameters:    Size  Location     Type
  p               1    wreg     unsigned char 
  i               1   12[COMMON] unsigned char 
  j               1   13[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  p               1    3[BANK0 ] unsigned char 
  sumJ            1    2[BANK0 ] unsigned char 
  sumI            1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       1       0       0       0
      Totals:         2       4       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_getI
		_getJ
		_newPair
 This function is called by:
		_move
 This function uses a non-reentrant model


 *************** function _newPair *****************
 Defined at:
		line 3 in file "pair.c"
 Parameters:    Size  Location     Type
  i               1    wreg     unsigned char 
  j               1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  i               1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_increment
		_startSnake
		_print
		_makeFood
 This function uses a non-reentrant model


 *************** function _getJ *****************
 Defined at:
		line 11 in file "pair.c"
 Parameters:    Size  Location     Type
  p               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  p               1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_increment
		_set
		_isSet
		_isFood
		_move
 This function uses a non-reentrant model


 *************** function _getI *****************
 Defined at:
		line 7 in file "pair.c"
 Parameters:    Size  Location     Type
  p               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  p               1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___awdiv
 This function is called by:
		_increment
		_set
		_isSet
		_isFood
		_move
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] int 
  dividend        2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  quotient        2    7[COMMON] int 
  sign            1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         9       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_getI
 This function uses a non-reentrant model


 *************** function _front *****************
 Defined at:
		line 15 in file "queue.c"
 Parameters:    Size  Location     Type
  q               1    wreg     PTR struct .
		 -> main@s(74), 
 Auto vars:     Size  Location     Type
  q               1    2[BANK0 ] PTR struct .
		 -> main@s(74), 
  pos             2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          6       0       0       0       0
      Totals:         6       3       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___awmod
 This function is called by:
		_print
		_move
 This function uses a non-reentrant model


 *************** function _back *****************
 Defined at:
		line 20 in file "queue.c"
 Parameters:    Size  Location     Type
  q               1    wreg     PTR struct .
		 -> main@s(74), 
 Auto vars:     Size  Location     Type
  q               1   10[COMMON] PTR struct .
		 -> main@s(74), 
  pos             2    8[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___awmod
 This function is called by:
		_move
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] int 
  dividend        2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  sign            1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_push
		_front
		_back
		_pop
 This function uses a non-reentrant model


 *************** function _lcd_str *****************
 Defined at:
		line 76 in file "lcd.c"
 Parameters:    Size  Location     Type
  str             2    2[COMMON] PTR const unsigned char 
		 -> STR_5(16), STR_4(12), STR_3(10), main@field(34), 
		 -> STR_2(14), STR_1(14), main@message(16), 
 Auto vars:     Size  Location     Type
  i               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_dat
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_dat *****************
 Defined at:
		line 46 in file "lcd.c"
 Parameters:    Size  Location     Type
  val             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  val             1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_lcd_wr
 This function is called by:
		_lcd_str
 This function uses a non-reentrant model


 *************** function _lcd_init *****************
 Defined at:
		line 57 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_atraso_ms
		_lcd_cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_cmd *****************
 Defined at:
		line 35 in file "lcd.c"
 Parameters:    Size  Location     Type
  val             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  val             1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_atraso_ms
		_lcd_wr
 This function is called by:
		_lcd_init
		_main
 This function uses a non-reentrant model


 *************** function _lcd_wr *****************
 Defined at:
		line 30 in file "lcd.c"
 Parameters:    Size  Location     Type
  val             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  val             1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_lcd_cmd
		_lcd_dat
 This function uses a non-reentrant model


 *************** function _atraso_ms *****************
 Defined at:
		line 26 in file "atraso.c"
 Parameters:    Size  Location     Type
  valor           2    0[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  i               2    3[COMMON] unsigned int 
  j               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_lcd_cmd
		_lcd_init
 This function uses a non-reentrant model


 *************** function _end *****************
 Defined at:
		line 32 in file "snake.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR struct .
		 -> main@s(74), 
 Auto vars:     Size  Location     Type
  s               1    3[BANK0 ] PTR struct .
		 -> main@s(74), 
 Return value:  Size  Location     Type
                  2   11[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       2       0       0       0
      Totals:         2       4       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_won
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _won *****************
 Defined at:
		line 28 in file "snake.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR struct .
		 -> main@s(74), 
 Auto vars:     Size  Location     Type
  s               1   10[COMMON] PTR struct .
		 -> main@s(74), 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          8       0       0       0       0
      Totals:        11       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_end
		_move
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
rtc_r.c
		_getu          		CODE           	0D7F	0000	6
		_getRandon     		CODE           	011F	0000	69
		_rtc_r         		CODE           	0578	0000	256
		_getd          		CODE           	0DBB	0000	14

rtc_r.c estimated size: 345

queue.c
		_startQueue    		CODE           	0E18	0000	29
		_pop           		CODE           	0FCC	0000	53
		_back          		CODE           	0E34	0000	34
		_push          		CODE           	0295	0000	82
		_front         		CODE           	0065	0000	61

queue.c estimated size: 259

i2c.c
		_i2c_rb        		CODE           	01F5	0000	80
		_delay         		CODE           	0D92	0000	10
		_i2c_start     		CODE           	0DD6	0000	17
		_i2c_stop      		CODE           	0DE6	0000	17
		_i2c_wb        		CODE           	00E0	0000	64

i2c.c estimated size: 188

snake.c
		_points        		CODE           	0DA4	0000	12
		_makeFood      		CODE           	02E6	0000	83
		_move          		CODE           	04AD	0000	204
		_set           		CODE           	0F3C	0000	48
		_won           		CODE           	0F10	0000	45
		_print         		CODE           	0391	0000	140
		_isFood        		CODE           	0F9B	0000	50
		_end           		CODE           	0E55	0000	35
		_isSet         		CODE           	0F6B	0000	49
		_startSnake    		CODE           	041C	0000	146

snake.c estimated size: 812

atraso.c
		_atraso_ms     		CODE           	0E77	0000	36

atraso.c estimated size: 36

C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c
		___awmod       		CODE           	01AA	0000	76

C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c estimated size: 76

pair.c
		_getI          		CODE           	0DF6	0000	18
		_newPair       		CODE           	0DAF	0000	13
		_getJ          		CODE           	0D77	0000	5
		_increment     		CODE           	0EBE	0000	41

pair.c estimated size: 77

shared
		__stringtab    		STRING         	0003	0000	17
		__initialization		CODE           	07DB	0000	34

shared estimated size: 51

C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\rand.c
		_srand         		CODE           	0D9B	0000	10
		_rand          		CODE           	0163	0000	72

C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\rand.c estimated size: 82

C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul32.c
		___lmul        		CODE           	00A1	0000	64

C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul32.c estimated size: 64

lcd.c
		_lcd_cmd       		CODE           	0E9A	0000	37
		_lcd_dat       		CODE           	0DC8	0000	15
		_lcd_wr        		CODE           	0D84	0000	7
		_lcd_str       		CODE           	0EE6	0000	43
		_lcd_init      		CODE           	0244	0000	82

lcd.c estimated size: 184

C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c
		___awdiv       		CODE           	0338	0000	90

C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c estimated size: 90

main.c
		_main          		CODE           	0677	0000	357

main.c estimated size: 357

