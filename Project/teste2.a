clear R0
loadi R1 IO
loadi R2 IO
loadi R3 IO
loadi R4 IO
_new: move R5 R4
multiply R5 R5
multiply R5 R1
multiply R4 R2
add R4 R3
add R4 R5
moveSp -2
storeSp R4 0
storei R4 IO
addi R0 2
loadi R4 IO
jmpp R4 _new
jmpn R4 _new
jump _order
_continueOrder: move R1 R0 
addi R1 -2
_continueOrderLoop: moveSp -2
addi R1 -2
jmpp R1 _continueOrderLoop
_order: move R1 R0
loadc R2 1;                     Sinal que indica se a pilha esta ordenada
_orderLoop: loadSp R3 0
loadSp R4 2
clear R5
sgt R5 R4 R3
jmpz R5 _nextStage
clear R2
storeSp R3 2
storeSp R4 0
_nextStage: moveSp 2
addi R1 -2
loadc R3 3
clear R4
sgt R4 R1 R3
jmpp R4 _orderLoop
jmpz R2 _continueOrder
move R1 R0
_printSp: loadSp R2 0
storei R2 IO
moveSp -2
addi R1 -2
jmpp R1 _printSp
exit
