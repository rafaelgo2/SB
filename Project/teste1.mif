DEPTH = 256;
WIDTH = 8;
ADDRESS_RADIX = HEX;
DATA_RADIX = BIN;
CONTENT
BEGIN

00        :  00001000;              -- _start: loadi R0 IO
01        :  11111110;              -- 
02        :  01101001;              -- loadc R1 0
03        :  00000000;              -- 
04        :  01101010;              -- loadc R2 1
05        :  00000001;              -- 
06        :  01010011;              -- _new: move R3 R2
07        :  01000000;              -- 
08        :  00001100;              -- loadi R4 IO
09        :  11111110;              -- 
0A        :  00101011;              -- _loop: multiply R3 R4
0B        :  10000000;              -- 
0C        :  00100100;              -- subtract R4 R2
0D        :  01000000;              -- 
0E        :  11010100;              -- jmpp R4_loop
0F        :  00001010;              -- 
10        :  00010011;              -- storei R3 IO
11        :  11111110;              -- 
12        :  00011001;              -- add R1 R2
13        :  01000000;              -- 
14        :  01010101;              -- move R5 R0
15        :  00000000;              -- 
16        :  00100101;              -- subtract R5 R1
17        :  00100000;              -- 
18        :  11010101;              -- jmpp R5_new
19        :  00000110;              -- 
[1A..FF]:  00000000;              -- 
END;
