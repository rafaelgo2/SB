;	Recebe entradas M e N
;	Calcula a PotÃªncia de M^N

_moduleThree:	loadc R0 0	; count reg
	loadc R5 1				;

	loadi R1 IO				;
	loadi R2 IO				;

	jmpz R2 _printOne		; if N = 0 , print 1

	seq R0 R5 R2			;
	jmpp R0 _printSame		; If N = 1, print o M

	storeSp R1 -2			;
	storeSp R2 -4			;

	moveSp -4				;

	loadc R0 3				; Count reg starts on 3

	move R4 R1				;

_loopCalc:	loadSp R1 2		;
	multiply R1 R4			;
	storeSp R1 2			;

	loadSp R2 0				;

	addi R0 1				; Count++

	slt R5 R0 R2			; Check branch cond

	jmpp R5 _loopCalc		; Branch to loop or not

	loadSp R1 2				;
	storei R1 IO			;
	.extern _moduleZero		;

_printSame:	storei R1 IO	;
	.extern _moduleZero		;

_printOne:	storei R5 IO	;
	.extern _moduleZero		;