DEPTH = 256 ;
WIDTH = 8 ;
ADDRESS_RADIX = HEX ;
DATA_RADIX = BIN ;
CONTENT
BEGIN

00 : 00001000 ; -- loadi R0 IO  ; 00 01
01 : 11111110 ; -- 
02 : 00001001 ; -- loadi R1 1  ; 02 03
03 : 00000001 ; -- 
[04..05]: 00100000 ; -- 
06 : 01101111 ; -- loadc R7 0  ; 06 07
07 : 00000000 ; -- 
08 : 01101111 ; -- loadc R7 0  ; 08 09
09 : 00000000 ; -- 
0A : 11010000 ; -- jmpp R0_this_OP2  ; 0A 0B
0B : 00010000 ; -- 
0C : 10001000 ; -- call _OP1  ; 0C 0D
0D : 00100000 ; -- 
0E : 00111000 ; -- jump _end  ; 0E 0F
0F : 00011110 ; -- 
[10..11]: 00100000 ; -- 
12 : 11010000 ; -- jmpp R0_this_OP3  ; 12 13
13 : 00011000 ; -- 
14 : 10001000 ; -- call _OP2  ; 14 15
15 : 01000000 ; -- 
16 : 00111000 ; -- jump _end  ; 16 17
17 : 00011110 ; -- 
[18..19]: 00100000 ; -- 
1A : 11010001 ; -- jmpp R1_end  ; 1A 1B
1B : 00011110 ; -- 
1C : 10001000 ; -- call _OP3  ; 1C 1D
1D : 10101010 ; -- 
[1E..1F]: 00000000 ; -- 
20 : 00001000 ; -- _OP1: loadi R0 IO  ; 20 21
21 : 11111110 ; -- 
22 : 01110001 ; -- clear R1  ; 22 23
23 : 00000000 ; -- 
24 : 00001010 ; -- _OP1new: loadi R2 IO  ; 24 25
25 : 11111110 ; -- 
26 : 01001010 ; -- jmpn R2_OP1new  ; 26 27
27 : 00100100 ; -- 
28 : 01110011 ; -- clear R3  ; 28 29
29 : 00000000 ; -- 
2A : 01101100 ; -- loadc R4 8  ; 2A 2B
2B : 00001000 ; -- 
2C : 10000011 ; -- slt R3 R2 R4  ; 2C 2D
2D : 01010000 ; -- 
2E : 01000011 ; -- jmpz R3_OP1new  ; 2E 2F
2F : 00100100 ; -- 
30 : 00101011 ; -- _OP1loop: multiply R3 R2  ; 30 31
31 : 01000000 ; -- 
32 : 10111010 ; -- addi R2-1  ; 32 33
33 : 11111111 ; -- 
34 : 11010010 ; -- jmpp R2_OP1loop  ; 34 35
35 : 00110000 ; -- 
36 : 00010011 ; -- storei R3 IO  ; 36 37
37 : 11111110 ; -- 
38 : 10111001 ; -- addi R1 1  ; 38 39
39 : 00000001 ; -- 
3A : 11001010 ; -- seq R2 R0 R1  ; 3A 3B
3B : 00000100 ; -- 
3C : 01000010 ; -- jmpz R2_OP1new  ; 3C 3D
3D : 00100100 ; -- 
3E : 10100000 ; -- ret  ; 3E 3F
3F : 00000000 ; -- 
40 : 00001001 ; -- _OP2: loadi R1 IO  ; 40 41
41 : 11111110 ; -- 
42 : 00001010 ; -- loadi R2 IO  ; 42 43
43 : 11111110 ; -- 
44 : 00001011 ; -- loadi R3 IO  ;  44 45
45 : 11111110 ; -- 
46 : 00001100 ; -- loadi R4 IO  ; 46 47
47 : 11111110 ; -- 
48 : 01010101 ; -- _OP2new: move R5 R4  ; 48 49
49 : 10000000 ; -- 
4A : 00101101 ; -- multiply R5 R5  ; 4A 4B
4B : 10100000 ; -- 
4C : 00101101 ; -- multiply R5 R1  ; 4C 4D
4D : 00100000 ; -- 
4E : 00101100 ; -- multiply R4 R2  ; 4E 4F
4F : 01000000 ; -- 
50 : 00011100 ; -- add R4 R3  ; 50 51
51 : 01100000 ; -- 
52 : 00011100 ; -- add R4 R5  ; 52 53
53 : 10100000 ; -- 
54 : 01111000 ; -- moveSp -2  ; 54 55
55 : 11111110 ; -- 
56 : 10011100 ; -- storeSp R4 0  ; 56 57
57 : 00000000 ; -- 
58 : 00010100 ; -- storei R4 IO  ;58 59
59 : 11111110 ; -- 
5A : 10111000 ; -- addi R0 2  ; 5A 5B
5B : 00000010 ; -- 
5C : 00001100 ; -- loadi R4 IO  ; 5C 5D
5D : 11111110 ; -- 
5E : 11010100 ; -- jmpp R4_OP2new  ; 5E 5F
5F : 01001000 ; -- 
60 : 01001100 ; -- jmpn R4_OP2new  ; 60 61
61 : 01001000 ; -- 
62 : 00111000 ; -- jump _OP2order  ; 62 63
63 : 01101110 ; -- 
64 : 01010001 ; -- _OP2continueOrder: move R1 R0  ; 64 65
65 : 00000000 ; -- 
66 : 10111001 ; -- addi R1-2  ; 66 67
67 : 11111110 ; -- 
68 : 01111000 ; -- _OP2continueOrderLoop: moveSp -2  ; 68 69
69 : 11111110 ; -- 
6A : 10111001 ; -- addi R1-2  ; 6A 6B
6B : 11111110 ; -- 
6C : 11010001 ; -- jmpp R1_OP2continueOrderLoop  ; 6C 6D
6D : 01101000 ; -- 
6E : 01010001 ; -- _OP2order: move R1 R0  ; 6E 6F
6F : 00000000 ; -- 
70 : 01101010 ; -- loadc R2 1  ; 70 71
71 : 00000001 ; -- 
72 : 10010011 ; -- _OP2orderLoop: loadSp R3 0  ; 72 73
73 : 00000000 ; -- 
74 : 10010100 ; -- loadSp R4 2  ; 74 75
75 : 00000010 ; -- 
76 : 01110101 ; -- clear R5  ; 76 77
77 : 00000000 ; -- 
78 : 10000101 ; -- slt R5 R4 R3  ; 78 79
79 : 10001100 ; -- 
7A : 01000101 ; -- jmpz R5_OP2nextStage  ; 7A 7B
7B : 10000010 ; -- 
7C : 01110010 ; -- clear R2  ; 7C 7D
7D : 00000000 ; -- 
7E : 10011011 ; -- storeSp R3 2  ; 7E 7F
7F : 00000010 ; -- 
80 : 10011100 ; -- storeSp R4 0  ; 80 81
81 : 00000000 ; -- 
82 : 01111000 ; -- _OP2nextStage: moveSp 2  ; 82 83
83 : 00000010 ; -- 
84 : 10111001 ; -- addi R1-2  ; 84 85
85 : 11111110 ; -- 
86 : 01101011 ; -- loadc R3 3  ; 86 87
87 : 00000011 ; -- 
88 : 01110100 ; -- clear R4  ; 88 89
89 : 00000000 ; -- 
8A : 11000100 ; -- sgt R4 R1 R3  ; 8A 8B
8B : 00101100 ; -- 
8C : 11010100 ; -- jmpp R4_OP2orderLoop  ; 8C 8D
8D : 01110010 ; -- 
8E : 01000010 ; -- jmpz R2_OP2continueOrder  ; 8E 8F
8F : 01100100 ; -- 
90 : 01010001 ; -- move R1 R0  ; 90 91
91 : 00000000 ; -- 
92 : 01010001 ; -- _OP2resetSP: move R1 R0  ; 92 93
93 : 00000000 ; -- 
94 : 10111001 ; -- addi R1-2  ; 94 95
95 : 11111110 ; -- 
96 : 01111000 ; -- _OP2continueResetSp: moveSp -2  ; 96 97
97 : 11111110 ; -- 
98 : 10111001 ; -- addi R1-2  ; 98 99
99 : 11111110 ; -- 
9A : 11010001 ; -- jmpp R1_OP2continueResetSp  ; 9A 9B
9B : 10010110 ; -- 
9C : 01010001 ; -- move R1 R0  ; 9C 9D
9D : 00000000 ; -- 
9E : 10010010 ; -- _OP2printSp: loadSp R2 0  ; 9E 9F
9F : 00000000 ; -- 
A0 : 00010010 ; -- storei R2 IO  ; A0 A01
A1 : 11111110 ; -- 
A2 : 01111000 ; -- moveSp 2  ; A2 A3
A3 : 00000010 ; -- 
A4 : 10111001 ; -- addi R1-2  ; A4 A5
A5 : 11111110 ; -- 
A6 : 11010001 ; -- jmpp R1_OP2printSp  ; A6 A7
A7 : 10011110 ; -- 
A8 : 10100000 ; -- ret  ; A8 A9
A9 : 00000000 ; -- 
AA : 00001010 ; -- _OP3: loadi R2 IO  ; AA AB
AB : 11111110 ; -- 
AC : 00001110 ; -- loadi R6 one  ; AC AD
AD : 11001000 ; -- 
AE : 00001000 ; -- loadi R0 zero  ; AE AF
AF : 11000110 ; -- 
B0 : 00001001 ; -- loadi R1 one  ; B0 B1
B1 : 11001000 ; -- 
B2 : 00001011 ; -- loadi R3 zero  ; B2 B3
B3 : 11000110 ; -- 
B4 : 01000010 ; -- _OP3loop: jmpz R2_OP3endLoop  ; B4 B5
B5 : 11000000 ; -- 
B6 : 01010011 ; -- move R3 R1  ; B6 B7
B7 : 00100000 ; -- 
B8 : 00011001 ; -- add R1 R0  ; B8 B9
B9 : 00000000 ; -- 
BA : 01010000 ; -- move R0 R3  ; BA BB
BB : 01100000 ; -- 
BC : 00100010 ; -- subtract R2 R6  ; BC BD
BD : 11000000 ; -- 
BE : 00111000 ; -- jump _OP3loop  ; BE BF
BF : 10110100 ; -- 
C0 : 00010000 ; -- _OP3endLoop: storei R0 IO  ; C0 C1
C1 : 11111110 ; -- 
C2 : 10100000 ; -- ret  ; C2 C3
[C3..C8]: 00000000 ; -- one: .data 2 1  ; C8 C9
C9 : 00000001 ; -- 
[CA..FF]: 00000000 ; -- 
END ;
